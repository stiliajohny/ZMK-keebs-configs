#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

// layers
// keys

#define HYPER LS(LC(LA(LGUI)))

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
    // L33T macros
        A_leet: A_leet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N4>;
            label = "A_LEET";
        };

        B_leet: B_leet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp N3>;
            label = "B_LEET";
        };

        C_leet: C_leet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCURLY>;
            label = "C_LEET";
        };

        D_leet: D_leet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp RPAREN>;
            label = "D_LEET";
        };

        E_leet: E_leet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N3>;
            label = "E_LEET";
        };
    // Endof L33T macros
    // Emoji Macros
        Red_Heart: Red_Heart {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp N3 &kp SPACE>;
            label = "RED_HEART";
        };

        Heart_Eyes: Heart_Eyes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp H &kp E &kp A &kp R &kp T &kp UNDER &kp E &kp Y &kp E &kp S &kp COLON &kp SPACE>;
            label = "HEART_EYES";
        };

        Broken_Heart: Broken_Heart {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp FSLH &kp N3 &kp SPACE>;
            label = "BROKEN_HEART";
        };

        Face_with_Tears_of_Joy: Face_with_Tears_of_Joy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp J &kp O &kp Y &kp COLON &kp SPACE>;
            label = "FACE_WITH_TEARS_OF_JOY";
        };

        Smiling_Face: Smiling_Face {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp RPAR &kp SPACE>;
            label = "SMILING_FACE";
        };

        ROFL: ROFL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp R &kp O &kp L &kp L &kp I &kp N &kp G &kp UNDER &kp O &kp N &kp UNDER &kp T &kp H &kp E &kp UNDER &kp F &kp L &kp O &kp O &kp R &kp UNDER &kp L &kp A &kp U &kp G &kp H &kp I &kp N &kp G &kp COLON &kp SPACE>;
            label = "ROFL";
        };

        Thumbs_up: Thumbs_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp PLUS &kp N1 &kp COLON &kp SPACE>;
            label = "THUMBS_UP";
        };

        Thumbs_Down: Thumbs_Down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp MINUS &kp N1 &kp COLON &kp SPACE>;
            label = "THUMBS_DOWN";
        };

        Crossed_Fingers: Crossed_Fingers {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp C &kp R &kp O &kp S &kp S &kp E &kp D &kp UNDER &kp F &kp I &kp N &kp G &kp E &kp R &kp S &kp COLON &kp SPACE>;
            label = "CROSSED_FINGERS";
        };

        Party_Popper: Party_Popper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp T &kp A &kp D &kp A &kp COLON &kp SPACE>;
            label = "PARTY_POPPER";
        };

        Birthday_Cake: Birthday_Cake {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp B &kp I &kp R &kp T &kp H &kp D &kp A &kp Y &kp COLON &kp SPACE>;
            label = "BIRTHDAY_CAKE";
        };

        Party_Face: Party_Face {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp P &kp A &kp R &kp T &kp Y &kp I &kp N &kp G &kp UNDER &kp F &kp A &kp C &kp E &kp COLON &kp SPACE>;
            label = "PARTY_FACE";
        };

        Star: Star {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp S &kp T &kp A &kp R &kp COLON &kp SPACE>;
            label = "STAR";
        };

        Fire: Fire {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp F &kp I &kp R &kp E &kp COLON &kp SPACE>;
            label = "FIRE";
        };

        Rainbow: Rainbow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp R &kp A &kp I &kp N &kp B &kp O &kp W &kp COLON &kp SPACE>;
            label = "RAINBOW";
        };

        Crying_face: Crying_face {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp C &kp R &kp Y &kp COLON &kp SPACE>;
            label = "CRYING_FACE";
        };

        Angry_Face: Angry_Face {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp R &kp A &kp G &kp E &kp COLON &kp SPACE>;
            label = "ANGRY_FACE";
        };

        Thinking_Face: Thinking_Face {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp T &kp H &kp I &kp N &kp K &kp I &kp N &kp G &kp UNDER &kp F &kp A &kp C &kp E &kp COLON &kp SPACE>;
            label = "THINKING_FACE";
        };
    // Endof Emoji Macros

    // Desktop Macros
        next_desktop: next_desktop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp RIGHT>;
            label = "NEXT_DESKTOP";
        };

        previous_desktop: previous_desktop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT>;
            label = "PREVIOUS_DESKTOP";
        };
    // Endof Desktop Macros
    };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        rotary_desktop_move: rotary_desktop_move {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ROTARY_DESKTOP_MOVE";
            #sensor-binding-cells = <0>;
            bindings = <&next_desktop>, <&previous_desktop>;
        };

        sensor_rotate_var: sensor_rotate_var {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "SENSOR_ROTATE_VAR";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            bindings = <
                &lt 2 ESCAPE    &ht NUMBER_1 Q  &ht NUMBER_2 W  &ht NUMBER_3 E           &ht NUMBER_4 R  &ht NUMBER_5 T    &ht NUMBER_6 Y  &ht NUMBER_7 U   &ht NUMBER_8 I     &ht NUMBER_9 O  &ht NUMBER_0 P  &mt DELETE BACKSPACE
                &ht LCTRL TAB   &kp A           &kp S           &kp D                    &kp F           &kp G             &kp H           &kp J            &kp K              &kp L           &kp SEMICOLON   &kp ENTER
                &kp LEFT_SHIFT  &kp Z           &kp X           &kp C                    &kp V           &kp B             &kp N           &kp M            &kp COMMA          &kp DOT         &kp FSLH        &kp RSHFT
                                                                &ht C_PLAY_PAUSE C_MUTE  &lt 4 LGUI      &lt 1 SPACE       &lt 3 SPACE     &lt 2 RIGHT_GUI  &ht C_STOP C_STOP
            >;

            sensor-bindings =
                <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>,
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;

            label = "QWERTY";
        };

        sym-nav {
            bindings = <
                &trans  &trans          &kp UP_ARROW  &trans     &trans  &trans    &trans  &trans  &trans     &ht LEFT_BRACKET MINUS  &ht RIGHT_BRACKET EQUAL  &kp BSPC
                &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans  &trans    &trans  &trans  &trans     &kp SEMI                &kp SQT                  &kp BACKSLASH
                &trans  &trans          &trans        &trans     &trans  &trans    &trans  &trans  &kp COMMA  &kp DOT                 &kp FSLH                 &trans
                                                    &trans     &trans  &trans    &trans  &trans  &trans
            >;

            label = "Sym/Nav";
            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp LC(RIGHT_ARROW) LC(LEFT_ARROW)>;
        };

        Settings {
            bindings = <
                &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3         &none  &none  &none  &none  &none  &kp BSPC
                &none   &none       &none         &none         &none         &ext_power EP_TOG    &none  &none  &none  &none  &none  &none
                &none   &none       &none         &none         &none         &none                &none  &none  &none  &none  &none  &none
                                                &none         &none         &none                &none  &none  &none
            >;

            label = "Settings ";
        };

        Emoji {
            bindings = <
                &trans  &trans  &none   &Red_Heart  &Heart_Eyes   &Broken_Heart       &Face_with_Tears_of_Joy  &Smiling_Face   &ROFL           &trans  &trans  &trans
                &trans  &trans  &trans  &Thumbs_up  &Thumbs_Down  &Crossed_Fingers    &Party_Popper            &Birthday_Cake  &Party_Face     &trans  &trans  &trans
                &trans  &trans  &trans  &Star       &Fire         &Rainbow            &Crying_face             &Angry_Face     &Thinking_Face  &trans  &trans  &trans
                                        &trans      &trans        &trans              &trans                   &trans          &trans
            >;

            label = "Emoji";
        };

        VSCode {
            bindings = <
                &trans  &kp LG(Q)  &trans     &trans  &kp LS(LG(Z))        &ht LC(LS(GRAVE)) LC(GRAVE)    &trans  &trans  &trans         &trans          &trans         &trans
                &trans  &trans     &kp LG(S)  &trans  &ht LS(LG(F)) LG(F)  &trans                         &trans  &trans  &trans         &trans          &trans         &trans
                &trans  &kp LG(Z)  &trans     &trans  &trans               &trans                         &trans  &trans  &kp LG(COMMA)  &kp LG(PERIOD)  &kp LG(SLASH)  &trans
                                              &trans  &trans               &trans                         &trans  &trans  &trans
            >;

            label = "VSCode";
        };
    };
};

// template
//  ┌──┬──┬──┬──┬──┬──┐      ┌──┬──┬──┬──┬──┬──┐
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  ├──┼──┼──┼──┼──┼──┤      ├──┼──┼──┼──┼──┼──┤
//  │  │  │  │  │  │  │      │  │  │  │  │  │  │
//  └──┴──┴──┴─┬┴─┬┴─┬┴─┐   ┌┴─┬┴─┬┴─┬┴──┴──┴──┘
//             │  │  │  │   │  │  │  │
//             └──┴──┴──┘   └──┴──┴──┘
